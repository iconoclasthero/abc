#!/bin/bash

editscript(){
  local scriptpath script path swp; scriptpath=$(realpath "$0" 2>/dev/null); script="${scriptpath##*/}"; path="${scriptpath%/*}"; swp="$path/.$script.swp"
     [[ ! -e "$swp" ]] && printf "\n\n%s\n\n" "$swp" && (/usr/bin/nano "$scriptpath") && exit
     printf "\n%s is already being edited.\n%s exists; try fg or look in another window.\n" "$scriptpath" "$swp"; exit ;}
[[ "$1" == @(edit|e|-e) ]] && editscript

pause(){ read -rp "$*" < /dev/tty; }

unset libraryArg
. ~/.config/abc.conf # defines "$default_library" & "$abs_sqlite" among other things...
limit=1
db="$abs_sqlite"

libraryId="${default_library#uuid: }"

while [[ "$#" -gt 0 ]]; do
  case "$1" in
    --library=*)
        libraryArg="${1#*=}"
        ;;
    --library)  # if no argument is given with --library then run abs.getlibraries for user selection
        libraryId=$(abs.getlibraries | tail -n2 | head -n1 | sed 's/uuid: //')
        echo "Using library ID: $libraryId"
        ;;
    --genre=*)
        genre="${1#*=}"
        ;;
    --genre)  # if no argument, provide listing of genres with > 2 entries
        sqlite3 /library/books/.share/abs/config/absdatabase.sqlite "SELECT genres FROM books;" | sed 's/^\[//'|sed 's/\]$//'|tr ',' '\n'|sort|uniq -c|awk '$1 >= 2 { $1=""; print substr($0, 2) }'
        ;;
    *)
        limit="$1"
        ;;
  esac
  shift
done

# is libraryArg is a UUID or a name?
if [[ "$libraryArg" =~ ^[0-9a-fA-F-]{36}$ ]]; then
  libraryId="$libraryArg"
elif [[ -n "$libraryArg" ]]; then
  libraryId=$(sqlite3 "$db" "SELECT id FROM libraries WHERE name = '$libraryArg';")
  if [[ -z "$libraryId" ]]; then
    echo "Library name '$libraryArg' not found."
    return 1
  fi
fi

if [ -n "$genre" ]; then
    genre_filter="AND '$genre' IN (SELECT value FROM json_each(b.genres))"
else
    genre_filter=""
fi

query="SELECT b.title, b.subtitle, a.lastFirst AS author, li.path, l.name AS library_name
  FROM books b
  JOIN bookAuthors ba ON b.id = ba.bookId
  JOIN authors a ON ba.authorId = a.id
  JOIN libraryItems li ON b.id = li.mediaId
  JOIN libraries l ON li.libraryId = l.id
  WHERE li.libraryId = '$libraryId'
  $genre_filter
  ORDER BY RANDOM()
  LIMIT $limit;"

random_books=$(sqlite3 "$db" "$query")

if [ -n "$random_books" ]; then
  IFS=$'\n'
  for book in $random_books; do
    IFS="|" read -r title subtitle author path library_name <<< "$book"
    echo "Title: $title${subtitle:+: $subtitle}"
    echo "Author: $author"
    echo "Path: $path"
    echo "Library: $library_name"
    echo ""
  done
else
  echo "No books found in the specified library."
fi
